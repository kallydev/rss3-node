// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package irys

import (
	"context"
	"math/big"

	"github.com/Khan/genqlient/graphql"
)

// TransactionsResponse is returned by Transactions on success.
type TransactionsResponse struct {
	Transactions TransactionsTransactionsTransactionConnection `json:"transactions"`
}

// GetTransactions returns TransactionsResponse.Transactions, and is useful for accessing the field via an interface.
func (v *TransactionsResponse) GetTransactions() TransactionsTransactionsTransactionConnection {
	return v.Transactions
}

// TransactionsTransactionsTransactionConnection includes the requested fields of the GraphQL type TransactionConnection.
type TransactionsTransactionsTransactionConnection struct {
	Edges    []TransactionsTransactionsTransactionConnectionEdgesTransactionEdge `json:"edges"`
	PageInfo TransactionsTransactionsTransactionConnectionPageInfo               `json:"pageInfo"`
}

// GetEdges returns TransactionsTransactionsTransactionConnection.Edges, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnection) GetEdges() []TransactionsTransactionsTransactionConnectionEdgesTransactionEdge {
	return v.Edges
}

// GetPageInfo returns TransactionsTransactionsTransactionConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnection) GetPageInfo() TransactionsTransactionsTransactionConnectionPageInfo {
	return v.PageInfo
}

// TransactionsTransactionsTransactionConnectionEdgesTransactionEdge includes the requested fields of the GraphQL type TransactionEdge.
type TransactionsTransactionsTransactionConnectionEdgesTransactionEdge struct {
	Cursor string                                                                           `json:"cursor"`
	Node   TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction `json:"node"`
}

// GetCursor returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdge.Cursor, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdge) GetCursor() string {
	return v.Cursor
}

// GetNode returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdge.Node, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdge) GetNode() TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction {
	return v.Node
}

// TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction includes the requested fields of the GraphQL type Transaction.
type TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction struct {
	Id        string                                                                                    `json:"id"`
	Token     string                                                                                    `json:"token"`
	Address   string                                                                                    `json:"address"`
	Tags      []TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag `json:"tags"`
	Signature string                                                                                    `json:"signature"`
	Timestamp *big.Int                                                                                  `json:"timestamp"`
	Receipt   TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt   `json:"receipt"`
	Size      string                                                                                    `json:"size"`
	Fee       string                                                                                    `json:"fee"`
}

// GetId returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Id, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetId() string {
	return v.Id
}

// GetToken returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Token, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetToken() string {
	return v.Token
}

// GetAddress returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Address, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetAddress() string {
	return v.Address
}

// GetTags returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Tags, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetTags() []TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag {
	return v.Tags
}

// GetSignature returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Signature, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetSignature() string {
	return v.Signature
}

// GetTimestamp returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Timestamp, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetTimestamp() *big.Int {
	return v.Timestamp
}

// GetReceipt returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Receipt, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetReceipt() TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt {
	return v.Receipt
}

// GetSize returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Size, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetSize() string {
	return v.Size
}

// GetFee returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction.Fee, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransaction) GetFee() string {
	return v.Fee
}

// TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt includes the requested fields of the GraphQL type Receipt.
type TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt struct {
	Version        string   `json:"version"`
	Signature      string   `json:"signature"`
	Timestamp      *big.Int `json:"timestamp"`
	DeadlineHeight *big.Int `json:"deadlineHeight"`
}

// GetVersion returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt.Version, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt) GetVersion() string {
	return v.Version
}

// GetSignature returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt.Signature, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt) GetSignature() string {
	return v.Signature
}

// GetTimestamp returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt.Timestamp, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt) GetTimestamp() *big.Int {
	return v.Timestamp
}

// GetDeadlineHeight returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt.DeadlineHeight, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionReceipt) GetDeadlineHeight() *big.Int {
	return v.DeadlineHeight
}

// TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag includes the requested fields of the GraphQL type Tag.
type TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag.Name, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag) GetName() string {
	return v.Name
}

// GetValue returns TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag.Value, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionEdgesTransactionEdgeNodeTransactionTagsTag) GetValue() string {
	return v.Value
}

// TransactionsTransactionsTransactionConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
type TransactionsTransactionsTransactionConnectionPageInfo struct {
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

// GetEndCursor returns TransactionsTransactionsTransactionConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns TransactionsTransactionsTransactionConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *TransactionsTransactionsTransactionConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// __TransactionsInput is used internally by genqlient
type __TransactionsInput struct {
	Owners []string `json:"owners"`
	After  string   `json:"after"`
	First  int      `json:"first"`
}

// GetOwners returns __TransactionsInput.Owners, and is useful for accessing the field via an interface.
func (v *__TransactionsInput) GetOwners() []string { return v.Owners }

// GetAfter returns __TransactionsInput.After, and is useful for accessing the field via an interface.
func (v *__TransactionsInput) GetAfter() string { return v.After }

// GetFirst returns __TransactionsInput.First, and is useful for accessing the field via an interface.
func (v *__TransactionsInput) GetFirst() int { return v.First }

// The query or mutation executed by Transactions.
const Transactions_Operation = `
query Transactions ($owners: [String!], $after: String, $first: Int) {
	transactions(owners: $owners, after: $after, first: $first, order: ASC) {
		edges {
			cursor
			node {
				id
				token
				address
				tags {
					name
					value
				}
				signature
				timestamp
				receipt {
					version
					signature
					timestamp
					deadlineHeight
				}
				size
				fee
			}
		}
		pageInfo {
			endCursor
			hasNextPage
		}
	}
}
`

func Transactions(
	ctx_ context.Context,
	client_ graphql.Client,
	owners []string,
	after string,
	first int,
) (*TransactionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "Transactions",
		Query:  Transactions_Operation,
		Variables: &__TransactionsInput{
			Owners: owners,
			After:  after,
			First:  first,
		},
	}
	var err_ error

	var data_ TransactionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
