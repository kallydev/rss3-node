version: "3"

services:
  devcontainer:
    container_name: devcontainer
    build:
      context: .
      dockerfile: Dockerfile
    cap_add:
      - SYS_PTRACE
    command: sleep infinity
  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - default
    ports:
      - "8080:8080"
      - "5432:5432"
    volumes:
      - "postgres:/postgres/postgres-data"
  kafka:
    container_name: broker
    hostname: broker
    image: confluentinc/cp-kafka:7.4.0
    networks:
      - default
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - kafka:/var/lib/kafka/data
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 10485760 # 10 MiB
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.49.0
    networks:
      - default
    ports:
      - "4317:4317" # OpenTelemetry Protocol over gRPC
      - "4318:4318" # OpenTelemetry Protocol over HTTP
      - "5778:5778" # Configurations
      - "16686:16686" # Frontend
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
  pyroscope:
    container_name: pyroscope
    image: grafana/pyroscope:1.5.0
    networks:
      - default
    ports:
      - "4040:4040"
    command:
      - server
volumes:
  postgres:
  kafka:
  jaeger:
  redis:
networks:
  default:
