name: build & push

on:
  push:
    branches:
      - main
      - prod
      - worker-dev
    tags:
      - "*"
  pull_request:

permissions:
  contents: read
  id-token: write
  pull-requests: write
  packages: write

env:
  GAR_REGISTRY: us-central1-docker.pkg.dev/rss3-409706/docker

jobs:
  build:
    runs-on:
      - self-hosted
      - ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: projects/987979088361/locations/global/workloadIdentityPools/github/providers/github-action
          service_account: gh-action@naturalselectionlabs.iam.gserviceaccount.com
          create_credentials_file: true

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GAR_REGISTRY }}/node
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.GAR_REGISTRY }}/node,push-by-digest=true,name-canonical=true,push=${{ github.actor != 'dependabot[bot]' }}
      - name: Export digest
        if: github.actor != 'dependabot[bot]'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        if: github.actor != 'dependabot[bot]'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: projects/987979088361/locations/global/workloadIdentityPools/github/providers/github-action
          service_account: gh-action@naturalselectionlabs.iam.gserviceaccount.com
          create_credentials_file: true

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            rss3/node
            ghcr.io/${{ github.repository }}
            ${{ env.GAR_REGISTRY }}/node
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ matrix.arch }},enable={{is_default_branch}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-,enable=${{ !startsWith(github.ref, 'refs/tags') && github.event_name != 'pull_request' }},event=branch

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          if [ ${{ github.event_name }} == 'pull_request' ]; then
            ARGS="--dry-run"
          fi
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GAR_REGISTRY }}/node@sha256:%s ' *) $ARGS
      - name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.GAR_REGISTRY }}/node:${{ steps.meta.outputs.version }}
